name: Build
description: "Builds the given Pijul version"
inputs:
  version:
    description: "Pijul version to build"
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Set up environment
      shell: bash
      run: |
        echo "CARGO_TERM_COLOR=always" | tee -a "$GITHUB_ENV"
        echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static-md" | tee -a "$GITHUB_ENV"
        echo "VCPKG_INSTALLED_DIR=${{ github.workspace }}/vcpkg_installed" | tee -a "$GITHUB_ENV"
        echo "LIB=${{ github.workspace }}/vcpkg_installed/x64-windows-static-md/lib" | tee -a "$GITHUB_ENV"
        echo "OPENSSL_DIR=${{ github.workspace }}/vcpkg_installed/x64-windows-static-md" | tee -a "$GITHUB_ENV"
        echo "CARGO_TARGET_DIR=${{ github.workspace }}/cargo_target" | tee -a "$GITHUB_ENV"
    - uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: "f6a5d4e8eb7476b8d7fc12a56dff300c1c986131"
        runVcpkgInstall: true
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable-gnu
    - name: Cache Cargo target dir
      uses: actions/cache@v3
      with:
        key: cargo-target
        path: ${{ github.workspace }}/cargo_target
    - name: Build pijul
      shell: bash
      run: |
        cargo install pijul --version ${{ inputs.version }} --root . --locked
        cp bin/pijul.exe pijul.exe
    - name: Build pijul-with-git
      shell: bash
      run: |
        cargo install pijul --version ${{ inputs.version }} --root . --locked --features git
        cp bin/pijul.exe pijul-with-git.exe
